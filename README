#############################
Hybrid Cache for PHP >= 5.3.x
#############################

usage...

// require init.php for autoload classes

require('lib/init.php');

// add a MediaStorage to the Cache class:

use Hybrid/Cache;
use Hybrid/Storages/Memcache as MemcacheStorage;

Cache::addStorageMedia( new MemcacheStorage('localhost') );

// create a cache instance, with a identifier (can be a lot of values):

$cache = Cache::create(__FILE__, 'list top users');

// comprobe if cache exists and is aviable

if ($data = $cache->getCache(true)) {
    // throw cache
    echo $cache;
    // stop the script (or the method, ect)
    exit(0);
} else {
    // set the cache status as "saving" (for no duplicate generate process)
    $cache->setStatusSaving();
}

// make you heavy process.... (saving the result in a variable)

// thorw the result
echo $result;
// save the result on cache
$cache->save($result);